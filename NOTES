This file will collect all relevant notes for the project, such as design
decision that might need to be reconsidered or any general advice in building
this kind of system.  This is mostly to be used as a remainder of some
sensitive point in the project.

-------------------------------------------------------------------------------

-- Variable vs Uninterpreted Function Symbol 

The difference is not clear, especially in SMTLIB where it is necessary to
collect uninterpreted symbol as free variables.

-- Formula + Term vs all terms with boolean sort used to build formulas 

Having a static type distinction can allow some static checking by the
compiler, but this makes the definition of maps and fold over tree very heavy
with the need to carry around both functions to map formulas and terms

-- Semantics of tree transformation over binded variable

What should be the semantic of substitute or map with variable that are bound
to a quantifier?

-- Minicore + extractors

This is, I believe, a very elegant way to have a compatible tree among all
theories that can be extended with any operator with very minimal amount of
code and still get all the usefull tree function without any change. However we
lose the static type information of all these new operators that simply become
FunctionApplication, and we cannot statically declare function that only accept
a very specific part of the tree. This forces to use dynamic check everywhere.
I believe this is not foundamentally a performence issue because the dynamic
check can simply be ignore once the code is sufficiently tested and every
function is used with the correct kind of arguments.
